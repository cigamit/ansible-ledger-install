# Disabling SELinux until we set it up later
#- name: Disable SELinux (for now)
#  ansible.posix.selinux:
#    state: disabled

#- name: Setenforce 0
#  shell: setenforce 0
#  when: ansible_selinux.mode != "disabled"
#  ignore_errors: true

- name: Ensure Nginx can connect to network
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true

- name: Ensure Nginx can connect to remote database
  ansible.posix.seboolean:
    name: httpd_can_network_connect_db
    state: true
    persistent: true

- name: Ensure Nginx can connect to SMTP/sendmail
  ansible.posix.seboolean:
    name: httpd_can_sendmail
    state: true
    persistent: true

- name: Allow Nginx to listen on tcp port 5000
  community.general.seport:
    ports: 5000
    proto: tcp
    setype: http_port_t
    state: present

- name: Install EPEL
  ansible.builtin.yum:
    name: epel-release
    state: present

- name: Install Packages
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  loop:
    - nginx

- name: Create Directory for SSL Certs
  ansible.builtin.file:
    name: /etc/ssl/private
    state: directory
    mode: 0700

- name: Check for Cert
  ansible.builtin.stat:
    path: /etc/ssl/private/nginx-selfsigned.key
  register: cert

- name: Create SSL Certs
  ansible.builtin.shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=US/ST=Ledger/L=Ledger/O=Ledger/OU=Ledger/CN=ledger" -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
  when: not cert.stat.exists

- name: Create SSL Certs DHParam (this will take several minutes)
  ansible.builtin.shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  when: not cert.stat.exists

- name: Create nginx configuration
  ansible.builtin.template:
    src: templates/web.conf.j2
    dest: /etc/nginx/conf.d/web.conf
  notify: Restart nginx

- name: Create nginx configuration
  ansible.builtin.template:
    src: templates/parser.conf.j2
    dest: /etc/nginx/conf.d/parsers.conf
  notify: Restart nginx

- name: Create Directory for Logs
  ansible.builtin.file:
    name: /opt/app/logs
    state: directory
    mode: 0755
    owner: nginx
    group: nginx

- name: Populate service facts
  ansible.builtin.service_facts:

- name: permit traffic in default zone for https service
  ansible.posix.firewalld:
    service: http
    permanent: yes
    state: enabled
  when: 
    - "'firewalld.service' in services"
  notify: Restart firewalld

- name: permit traffic in default zone for https service
  ansible.posix.firewalld:
    service: https
    permanent: yes
    state: enabled
  when: 
    - "'firewalld.service' in services"
  notify: Restart firewalld

- name: permit traffic in default zone for parser service
  ansible.posix.firewalld:
    port: 5000/tcp
    permanent: yes
    state: enabled
  when:
    - "'firewalld.service' in services"
  notify: Restart firewalld

- name: Start nginx Service
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
